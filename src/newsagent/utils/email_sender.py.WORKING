# ── src/newsagent/utils/email_sender.py ──────────────────────────────────
from __future__ import annotations
import os, smtplib
from email.message import EmailMessage
from pathlib import Path
from src.newsagent.utils.report_writer import convert_markdown_to_html
from src.newsagent.utils.translator    import translate


def _lang(stem: str) -> str:            # detects “…_de.md”
    c = stem.split("_")[-1].lower()
    return c if len(c) == 2 else "en"


def send_report_via_email(p: Path | str) -> None:
    p = Path(p)
    md = p.read_text(encoding="utf-8")
    lang = _lang(p.stem)

    recip = (os.getenv(f"RECIP_{lang.upper()}") or
             os.getenv("EMAIL_TO") or
             os.getenv("RECIP_EN"))
    if not recip:
        print(f"[WARN] no recipient for {lang}")
        return

    host = os.getenv("SMTP_HOST", "")
    port = int(os.getenv("SMTP_PORT", "587"))
    user = os.getenv("SMTP_USER", "")
    pwd  = os.getenv("SMTP_PASS") or os.getenv("SMTP_PASSWORD") or ""
    use_ssl = os.getenv("SMTP_SSL", "0") == "1"
    from_addr = os.getenv("EMAIL_FROM") or user

    if not all((host, user, pwd)):
        print("[WARN] SMTP creds incomplete – mail skipped")
        return

    md_body = translate(md, {"de": "DEU", "sv": "SVE",
                             "pl": "POL"}.get(lang, "ENG"))
    html = convert_markdown_to_html(md_body)

    msg            = EmailMessage()
    msg["Subject"] = p.stem.replace("_", " ").title()
    msg["From"]    = from_addr
    msg["To"]      = recip

    # HTML-ONLY body ⇒ every client shows formatting
    msg.set_content(html, subtype="html", charset="utf-8")

    # attach raw EN markdown for archives
    msg.add_attachment(md.encode("utf-8"),
                       maintype="text", subtype="markdown",
                       filename=p.name)

    print(f"[INFO] mailing {p.name} → {recip}")
    smtp_cls = smtplib.SMTP_SSL if use_ssl else smtplib.SMTP
    with smtp_cls(host, port) as smtp:
        if not use_ssl:
            smtp.starttls()
        smtp.login(user, pwd)
        smtp.send_message(msg)
    print("[OK] sent.")
